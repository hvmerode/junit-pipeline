# Copyright (c) Henry van Merode.
# Licensed under the MIT License.

# Build numbering format
name: $(Date:yyyyMMdd)$(Rev:.r)

trigger: none

# Define 2 repositories, one is an Azre DevOps repo and the other a GitHub repo
# Note, that the 'endpoint' parameter is mandatory for a GitHub repository
resources:
  repositories:
    - repository: external
      name: Templates/Templates
      type: git
      ref: refs/heads/develop
    - repository: external2
      name: hvmerode/azdo-templates
      type: github
      endpoint: GitHubEndpoint

parameters:
  - name: param_1
    type: string
    default: 'contains a default value'
  - name: environment
    type: string
    default: dev
  - name: sleep
    type: string
    default: 1

variables:
  - name: myVar
    value: myValue
  - name: aws_connection
    value: 1234567890
  - name: aws_region
    value: us-east-1

stages:
  - template: templates/stages/template-stages.yml
    parameters:
      aNiceParam: param_1_value
      template: test_param_with_name_template

  - stage: ExecuteScriptStage
    displayName: 'The executeScriptStage'
    condition: always()
    jobs:
      - job: Job_XA
        variables:
          - name: jobVar
            value: original_value_Job_XA
        displayName: ExecuteScriptStage job_xa
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo 'This is a multiline script'
              echo 'Row 2 of that script'
            displayName: ExecuteScriptStage job_xa script
      - job: Job_XB
        displayName: ExecuteScriptStage job_xb
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo 'Job_2.Task_1'
            displayName: ExecuteScriptStage job_xb script
          - template: templates/steps/template-steps.yml
            parameters:
              param_1: param_1_value
              param_2: param_2_value
      - job: Job_XC
        variables:
          - name: jobVar
            value: original_value_Job_XC
        displayName: ExecuteScriptStage job_xc
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: test-template.yml@external
          - template: test-template.yml@external2
          - script: |
              echo 'Job_2.Task_3: Sleep some seconds'
              sleep ${{ parameters.sleep }};
            displayName: ExecuteScriptStage job_xc script
      - template: templates/jobs/template-jobs.yml
        parameters:
          param_1: param_1_value

  - stage: DeployStage
    condition: eq(variables['Build.SourceBranchName'], 'master')
    displayName: 'The deployStage'
    jobs:
      - job: Job_XD
        displayName: DeployStage job_xd
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo 'AWS Connection is: $(aws_connection)'
              echo 'AWS Region is: $(aws_region)'
            displayName: DeployStage job_xd script
      - job: Job_XE
        displayName: DeployStage job_xe
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo 'Deploy to AWS'
            displayName: DeployStage job_xe script
          - task: AWSShellScript@1
            inputs:
              awsCredentials: $(aws_connection)
              regionName: $(aws_region)
              scriptType: 'inline'
              inlineScript: |
                #!/bin/bash
                set -ex
                export cdk=`find $(Pipeline.Workspace)/. -name 'cdk*.jar'`
                export app=`find $(Pipeline.Workspace)/. -name 'app*.jar'`

                echo "Deploying stack"
                cdk deploy --app '${JAVA_HOME_11_X64}/bin/java -cp $cdk com.org.app.Stack' \
                    -c env=${{ parameters.environment }} \
                    -c app=$app
                    --all \
                    --ci \
                    --require-approval never
            displayName: DeployStage job_xe AWSShellScript
