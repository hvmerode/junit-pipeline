# Build numbering format
name: $(Date:yyyyMMdd)$(Rev:.r)

parameters:
  - name: environment
    type: string
    default: acctest
    values:
      - dev
      - systest
      - acctest
      - prod

variables:
  - test: test
  - name: aws_connection
    value: 1234567890
  - name: aws_region
    value: us-east-1

stages:
  - stage: Execute_build
    displayName: 'Execute build'
    condition: always()
    jobs:
      - job: Tasks
        pool: Default
        steps:
          - script: echo 'Execute build'
          - task: Maven@3
            displayName: Maven Package
            inputs:
              mavenPomFile: pom.xml
            condition: always()
          - task: CopyFiles@2
            displayName: Copy Files to artifact staging directory
            inputs:
              SourceFolder: $(System.DefaultWorkingDirectory)
              Contents: '**/target/*.?(war|jar)'
              TargetFolder: $(Build.ArtifactStagingDirectory)
          - upload: $(Build.ArtifactStagingDirectory)
            artifact: drop

  - stage: Analyze_code
    displayName: 'Analyze code'
    condition: eq(variables['Build.SourceBranchName'], 'main')
    jobs:
      - job: Tasks
        pool: Default
        steps:
          - script: |
              pip install whispers
              whispers ./

  - stage: Deploy_artifact_to_test
    displayName: 'Deploy artifact to test'
    condition: eq(variables['Build.SourceBranchName'], 'main')
    jobs:
      - deployment: Deploy
        pool: Default
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: $(aws_connection)
                    regionName: $(aws_region)
                    scriptType: 'inline'
                    inlineScript: |
                      #!/bin/bash
                      set -ex
                      export artifact=`find $(Pipeline.Workspace)/. -name 'cdk*.jar'`

                      echo "Deploying stack"
                      cdk deploy --app '${JAVA_HOME_11_X64}/bin/java -cp $artifact com.myorg.myapp.Stack' \
                          -c env=${{ parameters.environment }} \
                          --all \
                          --ci \
                          --require-approval never
                  displayName: 'Deploy to AWS'
